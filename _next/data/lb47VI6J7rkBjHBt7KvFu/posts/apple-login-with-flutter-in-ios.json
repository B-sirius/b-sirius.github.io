{"pageProps":{"id":"apple-login-with-flutter-in-ios","title":"Sign in with apple by Flutter in iOS","date":"2023-03-02","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    strong: \"strong\",\n    h3: \"h3\",\n    img: \"img\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h4: \"h4\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Sign in with Apple is commonly used by modern apps now, this article will introduce a way to implement it with Flutter for iOS apps.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"intro\",\n      children: \"Intro\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here I will introduce the Apple login flow in iOS, which is \", _jsx(_components.strong, {\n        children: \"based on the authorization code.\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There should be another way to use the identity token and Apple public key to do the same job, but we didn’t put it into practice, so for now I won’t cover it.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"flow\",\n      children: \"Flow\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The iOS apple login flow is not bounded with flutter tech (Apple login in Android or Web has more steps than this and is not introduced here).\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://s2.loli.net/2023/03/02/IhVbdx2l3JFeP56.png\",\n        alt: \"apple login in iOS\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"used-packages\",\n      children: \"Used Packages\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Flutter\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.a, {\n              href: \"https://pub.dev/packages/sign_in_with_apple\",\n              children: \"sign_in_with_apple\"\n            }), \". Flutter bridge to Sign in with Apple.\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Node\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.a, {\n              href: \"https://www.npmjs.com/package/apple-signin-auth\",\n              children: \"apple-signin-auth\"\n            }), \". Apple sign in for Node.js.\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"docs\",\n      children: \"Docs\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://developer.apple.com/documentation/sign_in_with_apple/generate_and_validate_tokens\",\n          children: \"Apple Developer Documentation\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"steps\",\n      children: \"Steps\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"1-settings-on-the-apple-developer-page\",\n      children: \"1. Settings on the Apple Developer page\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"A paid apple developer membership account is required for this step!\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this step, we need to setup two things:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"an identifier that configures the App capabilities.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"create a private key.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"editcreate-identifier\",\n      children: \"edit/create Identifier\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Visit \", _jsx(_components.a, {\n        href: \"https://developer.apple.com/account/resources/certificates/list\",\n        children: \"Certificates, Identifiers & Profiles\"\n      }), \". Choose “\", _jsx(_components.a, {\n        href: \"https://developer.apple.com/account/resources/identifiers/list\",\n        children: \"Identifiers\"\n      }), \"“ and create/edit the APP’s identifier. Make sure “Sign in with Apple“ is selected in Capabilities.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://s2.loli.net/2023/03/02/KQPRUTC1rdqVnyu.jpg\",\n        alt: \"sign in with apple\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"After the identifier is created, it will show \", _jsx(_components.strong, {\n        children: \"team ID\"\n      }), \" and \", _jsx(_components.strong, {\n        children: \"bundle ID\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"we can also find team ID on \", _jsx(_components.a, {\n        href: \"https://developer.apple.com/account\",\n        children: \"account page\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"create-private-key\",\n      children: \"create private key\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Choose “\", _jsx(_components.a, {\n        href: \"https://developer.apple.com/account/resources/authkeys/list\",\n        children: \"keys\"\n      }), \"“ and register a new key, also make sure “Sign in with Apple“ is selected.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://s2.loli.net/2023/03/02/HdgeWFJ5iU18lPQ.jpg\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Then select the Primary app ID as the identifier bundle ID we just edited/selected.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://s2.loli.net/2023/03/02/14Mr82uSjNiplna.jpg\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"After it’s registered, it will provide a \", _jsx(_components.strong, {\n        children: \"one-time\"\n      }), \" download link to download the \", _jsx(_components.strong, {\n        children: \"private key\"\n      }), \" file.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Also, it has a \", _jsx(_components.strong, {\n        children: \"key ID\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://s2.loli.net/2023/03/02/J1hN4YLM38aIUog.jpg\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"2-settings-in-xcode\",\n      children: \"2. Settings in Xcode\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Open App project, Select “Target-Runner-Signing & Capabilities“ and add “Sign in with Apple“ Capability.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://s2.loli.net/2023/03/02/zn9LjGBDYqpmJSk.jpg\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Open “Signing“ tab and select the developer team ID and bundle ID.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://s2.loli.net/2023/03/02/s4G7wMlEqYRf8Xk.jpg\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"3-logic-in-the-client-side\",\n      children: \"3. Logic in the Client side\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We are using flutter to build our App, and the package \", _jsx(_components.a, {\n        href: \"https://pub.dev/packages/sign_in_with_apple\",\n        children: \"sign_in_with_apple\"\n      }), \" will help integrate with Apple service to get the credential we need. It’s usage is very straightforward so just check the \", _jsx(_components.a, {\n        href: \"https://pub.dev/packages/sign_in_with_apple#example-usage\",\n        children: \"example\"\n      }), \". And in the end, you will get a credential that contains the authorization code. It will be the key parameter for our App login API.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"4-logic-in-the-app-service-side\",\n      children: \"4. Logic in the App Service side\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The APP service will handle most part of the work. We are using node.js and the package \", _jsx(_components.a, {\n        href: \"https://www.npmjs.com/package/apple-signin-auth\",\n        children: \"apple-signin-auth\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this step, we only focus on two parts:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"create client secret\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"get authorization token\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"create-client-secret\",\n      children: \"create client secret\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Before we can ask Apple service for an authorization token, we need a “client secret“, which is a JWT used for each validation request between our server and apple service. if we check the \", _jsx(_components.a, {\n        href: \"https://developer.apple.com/documentation/sign_in_with_apple/generate_and_validate_tokens#3262048\",\n        children: \"doc\"\n      }), \" for details, we will see Apple requests the JWT be signed with a specific algorithm. So the \", _jsx(_components.a, {\n        href: \"https://www.npmjs.com/package/apple-signin-auth\",\n        children: \"apple-signin-auth\"\n      }), \" do us a favor, just use appleSignin.getClientSecret with the right parameters:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-javascript\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" clientSecret \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" appleSignin\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"getClientSecret\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"clientID\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'com.company.app'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// Apple Client ID, AKA Bundle ID\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"teamID\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'teamID'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// Apple Developer Team ID.\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"privateKey\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'PRIVATE_KEY_STRING'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// private key associated with your client ID. -- Or provide a `privateKeyPath` property instead.\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"keyIdentifier\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'XXXXXXXXXX'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// identifier of the private key. AKA key ID. - can be found here https://developer.apple.com/account/resources/authkeys/list\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// OPTIONAL\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"expAfter\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"15777000\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// Duration after which to expire JWT\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"get-authorization-token\",\n      children: \"get authorization token\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This part is straightforward. Just call the API and Apple service will return the authorization token. We can check the \", _jsx(_components.a, {\n        href: \"https://developer.apple.com/documentation/sign_in_with_apple/generate_and_validate_tokens#url\",\n        children: \"doc\"\n      }), \" and as always, \", _jsx(_components.a, {\n        href: \"https://www.npmjs.com/package/apple-signin-auth\",\n        children: \"apple-signin-auth\"\n      }), \" wrapped it as a function to call:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-javascript\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" options \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"clientID\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'com.company.app'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// Apple Client ID, AKA Bundle ID\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"redirectUri\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'http://localhost:3000/auth/apple/callback'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// We don't need it in our login flow.\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"clientSecret\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" clientSecret\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"try\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" tokenResponse \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"await\"\n        }), \" appleSignin\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"getAuthorizationToken\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"code\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" options\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"catch\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"err\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token console class-name\",\n          children: \"console\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"error\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"err\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Once our App Service gets the authorization token, we can do our business logic, like getting the user info, which shouldn’t be a problem.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"conclusion\",\n      children: \"Conclusion\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"So this is the way to support Apple login \", _jsx(_components.strong, {\n        children: \"based on the authorization code in\"\n      }), \" \", _jsx(_components.strong, {\n        children: \"iOS\"\n      }), \". Just remember there are other ways and more to set up if you want to support Android or Web.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"description":"Sign in with Apple is commonly used by modern apps now, this article will introduce a way to impleme......","usedCustomComponentNames":[]},"__N_SSG":true}