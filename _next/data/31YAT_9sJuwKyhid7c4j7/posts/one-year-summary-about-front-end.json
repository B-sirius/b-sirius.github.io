{"pageProps":{"id":"one-year-summary-about-front-end","title":"前端帝国4：基地前奏","date":"2017-12-12","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    hr: \"hr\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"真是在标题党的路上一去不复返，还是最低级的那种【摊】\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"在昨天小填了一下React的坑后，陷入了贤者模式，感觉就是第一波开荒结束，终于要在不同的职业之间做出选择。不过在选择成为 法师 / 刺客 / 战士 / 游侠 / 召唤师 等等之前，还是回顾一下从16年3月开始，到目前为止的21个月，我到底刷了什么怪吧（在这里要感谢我的书签栏，大概是我唯一比较有条理的东西）。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"回顾\",\n      children: \"回顾\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"html--css\",\n      children: \"HTML / CSS\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"最基础的知识不必多言，比较有意思的有：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"浏览器工作原理\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"HTML5一些新玩意儿\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"CSS常见属性的正确认知(absolute, vertical-align, line-height等)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"CSS百分比值\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"BFC，盒模型，层叠上下文...\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"transform，filter, mask 等与图形有关的骚操作\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Flex，Grid\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"js\",\n      children: \"JS\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"除了基础中的基础，主要是：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"ES6\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"类型，值，原生类型，强制转换，文法（grammar）\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"this，对象，原型，所谓“类”，行为委托\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"作用域，词法作用域，函数与块作用域，提升，作用域闭包\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"异步，回调，Promise，Generator\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"是的以上内容几乎都涵盖在《你不懂JS》和《ES6入门》中，在JS中遇到的零零散散的坑被这两套书系统总结的差不多了我也是心情复杂嗯\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Jq源码\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"设计模式\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"函数式编程\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"canvas相关\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"XMLHttpRequest相关\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"NodeJS相关\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"框架\",\n      children: \"框架\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Vue——MVVC，双向数据绑定（单项绑定 + onChange 侦听），模版\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"React——MVC，单向数据流（的概念），JSX\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"开发流程\",\n      children: \"开发流程\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Webpack\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"npm / yarn\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"git\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"安全\",\n      children: \"安全\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"XSS / CSRF\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"调试\",\n      children: \"调试\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"ChromeDevTools\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"开发工具\",\n      children: \"开发工具\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"VScode\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Sublime\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"辅助技能\",\n      children: \"辅助技能\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"正则表达式\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"魔法上网\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"md\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"切图\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"总结\",\n      children: \"总结\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"所以，上面的是劳资掌握的？不，只能说是大概开了下地图，自己究竟掌握多少心里没点（哔——）数么（这消音有什么用啊喂）。花了好一会儿罗列出来…...感觉药丸嗯。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"to-be-continued\",\n      children: \"To Be Continued\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"那么，接下来玩啥呢？现在还是对svg，canvas这块感兴趣，感觉是个值得一挖的坑，国内应用环境也比较成熟，设计方面也想系统的学习嗯。顺便现在有Audio API了，体量可以与canvas API相提并论，自己也做了个小钢琴玩了下，感觉有相关知识的话可以做出很屌的东西啊，像google doodle（虽然google doodle随便挑一个都碉堡了）的\", _jsx(_components.a, {\n        href: \"https://www.google.com/doodles/44th-anniversary-of-the-birth-of-hip-hop\",\n        children: \"嘻哈音乐诞生44周年\"\n      }), \"（需要魔法上网），同样的还有WebGL，如果对图形学有一定了解也能开发出碉堡了的玩意儿。所谓的专业技能，或许在这个时候才真正区分开不同的开发者。\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"毕竟才入坑不到两年，摸的没什么水平也可以理解嘛，虽然序章还没完全结束，但是还是要准备好下一章的剧本啊，我走！（boooooom——）\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"description":"真是在标题党的路上一去不复返，还是最低级的那种【摊】......","usedCustomComponentNames":[]},"__N_SSG":true}