{"pageProps":{"id":"image-processing-water-ripple","title":"图像处理初见！——水波纹","date":"2018-06-12","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\",\n    img: \"img\",\n    code: \"code\",\n    pre: \"pre\",\n    span: \"span\",\n    a: \"a\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"水波纹效果的实现方法其实相当多，今天俺想讨论的一种是利用算法（就是说依照某种规则将图像的像素乱搞一通，看起来就像波纹一样！）来进行处理的，不借助波纹图片等等，因此有很高的可定制性。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"WARNING——本文中的demo未做足够优化，不建议使用手机查看\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"首先来看一眼效果\",\n      children: \"首先来看一眼效果\"\n    }), \"\\n\", _jsxs(\"p\", {\n      \"data-height\": \"265\",\n      \"data-theme-id\": \"0\",\n      \"data-slug-hash\": \"YvVypN\",\n      \"data-default-tab\": \"js,result\",\n      \"data-user\": \"padfoot_07\",\n      \"data-embed-version\": \"2\",\n      \"data-pen-title\": \"water ripple\",\n      class: \"codepen\",\n      children: [\"See the Pen \", _jsx(\"a\", {\n        href: \"https://codepen.io/padfoot_07/pen/YvVypN/\",\n        children: \"water ripple\"\n      }), \" by Zhouyi (\", _jsx(\"a\", {\n        href: \"https://codepen.io/padfoot_07\",\n        children: \"@padfoot_07\"\n      }), \") on \", _jsx(\"a\", {\n        href: \"https://codepen.io\",\n        children: \"CodePen\"\n      }), \".\"]\n    }), \"\\n\", _jsx(\"script\", {\n      async: true,\n      src: \"https://static.codepen.io/assets/embed/ei.js\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"【伤害大家的眼睛使我快乐】\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"那么这么好的算法是什么呢\",\n      children: \"那么，这么好的算法是什么呢?\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"不准确的大概描述\",\n      children: \"不准确的大概描述\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在具体介绍策略之前，俺先模糊的描述一下这个策略的思想：\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"水波纹本质上是像素有规律的发生\", _jsxs(_components.strong, {\n        children: [\"偏移（offset）\", _jsx(_components.strong, {\n          children: \"造成的视觉效果，且这个偏移连续进行，看起来才会像是水波扩散、荡漾一样。因此在我们试图将这种偏移作用到图像（一堆像素）上之前，首先思考的是一连串的数值变化；我们为图像的每一个像素都赋予一个数值，来代表它在“水波纹”作用下的状态。而这个变化要具有连续性，我们要不停记录\"\n        }), \"当前\"]\n      }), \"和\", _jsx(_components.strong, {\n        children: \"上一帧渲染\"\n      }), \"的状态，再依据某种策略使其状态的改变自发进行下去。之后再\", _jsx(_components.strong, {\n        children: \"依据每个像素的状态信息，计算出它的偏移\"\n      }), \"。\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"具体策略\",\n      children: \"具体策略\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"假设我们处理的是100*100的图像，这个策略大概分为这么几步：\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"记录水波纹**当前（current）\", _jsx(_components.strong, {\n            children: \"和\"\n          }), \"上一帧渲染时（previous）**的状态信息。就像我们上文提的一样，这里的信息是对应每个像素的，因此俺就使用了两个数组来记录，长度都为10000（100*100，对应像素顺序是按照一行一行排列\"]\n        }), \"\\n\", _jsx(_components.p, {\n          children: \"，从左向右，从上向下），均初始化为0。\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"每一帧，都利用previous对current进行混合（这里似乎是一种\", _jsx(_components.strong, {\n            children: \"卷积\"\n          }), \"计算，然而俺的高数不好，可自行了解），并交换两者，具体如下：\"]\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: \"对于每个像素的current值（为了方便，边缘像素这里不处理），将其previous中的邻居像素（比如它的上下左右四个像素）的状态数值相加，除以2，减去current中的数值——当然我知道你听不懂，所以画了个图：\"\n            }), \"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.img, {\n                src: \"https://hukua-blog.oss-cn-beijing.aliyuncs.com/markdown-imgs/%E6%B3%A2%E7%BA%B9%E7%AD%96%E7%95%A5.png\",\n                alt: \"策略\"\n              })\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: \"等等！根据常识，波纹的扩散（塌陷）幅度会之间减小，因此我们还需要一个阻尼来减小current值，最简单的方法就是每帧都乘以一个小于1的值。\"\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: \"PS: 当然，咱肯定会想，这他喵是什么个原理？虽然我也不知道是哪位大神想出的算法（这个算法的使用相当广泛，以至于我参考的不同实现样例都不约而同得使用了该算法），但是至少咱可以可视化这个过程，康康到底发生了什么：\"\n            }), \"\\n\", _jsxs(\"p\", {\n              \"data-height\": \"265\",\n              \"data-theme-id\": \"0\",\n              \"data-slug-hash\": \"rKymEg\",\n              \"data-default-tab\": \"js,result\",\n              \"data-user\": \"padfoot_07\",\n              \"data-embed-version\": \"2\",\n              \"data-pen-title\": \"水波纹策略-可视化\",\n              class: \"codepen\",\n              children: [\"See the Pen \", _jsx(\"a\", {\n                href: \"https://codepen.io/padfoot_07/pen/rKymEg/\",\n                children: \"水波纹策略-可视化\"\n              }), \" by Zhouyi (\", _jsx(\"a\", {\n                href: \"https://codepen.io/padfoot_07\",\n                children: \"@padfoot_07\"\n              }), \") on \", _jsx(\"a\", {\n                href: \"https://codepen.io\",\n                children: \"CodePen\"\n              }), \".\"]\n            }), \"\\n\", _jsx(\"script\", {\n              async: true,\n              src: \"https://static.codepen.io/assets/embed/ei.js\"\n            }), \"\\n\", _jsx(_components.p, {\n              children: \"这里demo将每个像素的current值直接作为rgb值赋予了像素，数值越高的像素看起来越“亮”，可以直观的看出数值的变化就是波纹状。\"\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"接下来我们可以准备处理图像了，首先自然是获得图像的像素信息，比如我使用的p5.js，提供\", _jsx(_components.code, {\n            children: \"loadPixels()\"\n          }), \"这样的api便可如字面意义获得图像所有的像素信息，数据结构大概是这样：\"]\n        }), \"\\n\", _jsx(_components.pre, {\n          className: \"language-javascript\",\n          children: _jsxs(_components.code, {\n            className: \"language-javascript\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 如100*100的图片，像素数据的顺序按照一行一行排列，共100*100*4个元素\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 第一个像素的rgba\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"123\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// r\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"255\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// g\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"23\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// b\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"255\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// a\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 第二个像素的rgba\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"23\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"55\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"213\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"255\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// ......\"\n            }), \"\\n\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \"\\n\"]\n          })\n        }), \"\\n\", _jsx(_components.p, {\n          children: \"当然你也可以定义自己习惯的数据格式。\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"现在我们需要根据current值来决定图像像素的偏移量offset了。说实话，这一步俺们有很大的自主权，参数以及函数的选择可以带来不同的效果。简单的来说，current值越高意味着水波越高，“折射”越明显，偏移值越大。\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"在最后，我们需要互换current和previous数组，准备开始下一轮计算。\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"基本是到这一步就结束了——但显然我们还差一个关键步骤，就是触发波纹。上文在初始化current和previous时初始化是0，如果我们不去改变，偏移值自然也一直是0。想要在某个位置触发“水波纹”，只需改变该像素的previous值便可，随后每帧进行的计算会推动波纹的产生。除此之外，还可做一些水波在图像边缘碰撞的检测使效果更加真实。\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"大概的代码，具体可查看最上方的样例：\"\n        }), \"\\n\", _jsx(_components.pre, {\n          className: \"language-javascript\",\n          children: _jsxs(_components.code, {\n            className: \"language-javascript\",\n            children: [_jsx(_components.span, {\n              className: \"token spread operator\",\n              children: \"...\"\n            }), \"\\n\", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 触发波纹\"\n            }), \"\\n\", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"function\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"tick\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n    previous\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), _jsx(_components.span, {\n              className: \"token function\",\n              children: \"int\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token function\",\n              children: \"random\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token number\",\n              children: \"400\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), _jsx(_components.span, {\n              className: \"token function\",\n              children: \"int\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token function\",\n              children: \"random\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token number\",\n              children: \"400\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"512\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\", _jsx(_components.span, {\n              className: \"token spread operator\",\n              children: \"...\"\n            }), \"\\n\", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 每一帧绘制\"\n            }), \"\\n\", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"function\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"draw\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"drawImage\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\\t\", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"loadPixels\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 循环非边缘的对象\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token keyword control-flow\",\n              children: \"for\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"let\"\n            }), \" i \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \" i \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"<\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"COLS\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \" i\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"++\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n        \", _jsx(_components.span, {\n              className: \"token keyword control-flow\",\n              children: \"for\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"let\"\n            }), \" j \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \" j \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"<\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"ROWS\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \" j\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"++\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n            current\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"i\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"j\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"\\n                previous\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"i \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"j\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+\"\n            }), \"\\n                previous\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"i \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"j\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+\"\n            }), \"\\n                previous\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"i\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"j \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+\"\n            }), \"\\n                previous\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"i\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"j \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"/\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"2\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" current\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"i\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"j\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\\n            current\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"i\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"j\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"*=\"\n            }), \" dampening\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\\n\\t\\t\\t\", _jsx(_components.span, {\n              className: \"token spread operator\",\n              children: \"...\"\n            }), \"\\n\\n            \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" data \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1024\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" current\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"i\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"j\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\\n            \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 获得偏移值\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"let\"\n            }), \" xoffset \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"int\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"i\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"*\"\n            }), \" data \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"/\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1024\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"let\"\n            }), \" yoffset \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"int\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"j\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"*\"\n            }), \" data \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"/\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1024\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\\n            \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 边缘检查\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"token keyword control-flow\",\n              children: \"if\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"xoffset \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \">=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"COLS\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" xoffset \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"COLS\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"token keyword control-flow\",\n              children: \"else\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword control-flow\",\n              children: \"if\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"xoffset \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"<\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" xoffset \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"token keyword control-flow\",\n              children: \"if\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"yoffset \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \">=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"ROWS\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" yoffset \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"ROWS\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"token keyword control-flow\",\n              children: \"else\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword control-flow\",\n              children: \"if\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"yoffset \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"<\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" yoffset \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\\n            \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 根据偏移值获得偏移下标\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" index \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"i \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+\"\n            }), \" j \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"*\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"COLS\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"*\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"4\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" newIndex \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"xoffset \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+\"\n            }), \" yoffset \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"*\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"COLS\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"*\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"4\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\\n            pixels\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"index\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" imagePixelsCopy\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"newIndex\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n            pixels\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"index \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" imagePixelsCopy\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"newIndex \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n            pixels\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"index \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"2\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" imagePixelsCopy\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"newIndex \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"2\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n        \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"updatePixels\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\\n    \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 交换current与previous\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"let\"\n            }), \" temp \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" previous\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n    previous \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" current\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n    current \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" temp\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          })\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"历史考察\",\n      children: \"历史考察\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"在写这篇水文查阅资料时，发现有几篇文章都指向了一个现在无法打开的地址，好在\", _jsx(_components.a, {\n        href: \"https://archive.org/\",\n        children: \"archive\"\n      }), \"存有快照，这是篇98年的博客，作者对于算法的原理及应用都有很好的介绍，很建议阅读，这里是\", _jsx(_components.a, {\n        href: \"https://web.archive.org/web/20160607052007/http://freespace.virgin.net/hugo.elias/graphics/x_water.htm\",\n        children: \"地址\"\n      }), \"。\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"我什么都不想做，我只想玩赛博朋克2077.jpg\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"description":"水波纹效果的实现方法其实相当多，今天俺想讨论的一种是利用算法（就是说依照某种规则将图像的像素乱搞一通，看起来就像波纹一样！）来进行处理的，不借助波纹图片等等，因此有很高的可定制性。......","usedCustomComponentNames":[]},"__N_SSG":true}