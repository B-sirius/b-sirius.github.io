{"pageProps":{"id":"use-nextjs-create-SSG-blog","title":"你的静态博客，何必是hexo","date":"2023-01-18","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    hr: \"hr\",\n    h2: \"h2\",\n    img: \"img\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    h3: \"h3\",\n    ol: \"ol\",\n    strong: \"strong\",\n    pre: \"pre\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"hexo一直是静态博客的首选之一，它开箱即用的特点以及相对丰富的主题选择让使用者可以聚焦于博客内容的编写，同时拥有一个相对美观的界面。但如果你是一个对博客内容有高度自定义需求的开发者，且并没有分享博客主题的诉求，hexo的主题开发会是一定的挑战，因为你需要在其基础上进行主题模版开发，而不能自由选择心仪的技术栈。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"本文将从静态博客的核心原理出发，以我个人的博客为例，阐述如何选择合适的技术栈，来搭建一个最基础的静态博客应用。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"本文参考仓库：\", _jsx(_components.a, {\n        href: \"https://github.com/B-sirius/b-sirius.github.io/tree/0.1.0\",\n        children: \"b-sirius.github.io\"\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"静态博客从哪里来\",\n      children: \"静态博客从哪里来\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"首先，静态博客是什么？\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"博客，一般至少涉及两个页面（模块）：文章列表页、文章详情页。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"静态，意味着不依赖服务端，意味着用户访问的内容，就是一堆已经板上钉钉写死的html、css、js代码。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"这堆代码从哪里来？互联网的蛮荒时代，可能是人们一个个手写的，但现在显然不是，它们必然是编译产物。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"为了能够设计我们自己的博客，我们不妨从hexo入手，先看看hexo的编译产物是什么——\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://s2.loli.net/2023/01/04/LxVfBwpvloub93X.png\",\n        alt: \"hexo的编译产物\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"上图是典型的hexo的编译产物，我们关注一下html的入口文件：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"蓝框部分，是博客的“归档”功能，不属于上面提到的博客基本页面，就先无视。\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"红框部分，首先是一个\", _jsx(_components.code, {\n          children: \"index.html\"\n        }), \"，这是博客列表页；其次是\", _jsx(_components.code, {\n          children: \"${date}/${title}/index.html\"\n        }), \"，这是两个博客详情页，对应着两篇博文。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"而在hexo项目中，你需要自定义的内容很简单，自然就是博客内容markdown文件，都存放在\", _jsx(_components.code, {\n        children: \"source/_posts\"\n      }), \"目录中。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://s2.loli.net/2023/01/04/rDgzhAdBL2Tf4y1.png\",\n        alt: \"hexo的博客存放目录\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"因此，hexo的基本思路就是，将文件夹内的一系列markdown文件，构建成用户最终访问的文章列表页与文章详情页。最后部署的就是这份构建产物。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以下为一个典型的使用hexo搭建静态博客的流程：\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://s2.loli.net/2023/01/13/4jVvm1eoY7sOMLK.png\",\n        alt: \"hexo流程\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"那么hexo是不可替代的么？\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"当然不是，从上图中可以看出，hexo是一个SSG框架，如果你不熟悉SSG，可以先去了解一下\", _jsx(_components.a, {\n        href: \"https://juejin.cn/post/7039151040188383268\",\n        children: \"CSR，SSR和SSG是什么\"\n      }), \"。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"因此，只要是支持SSG的框架都可以用于静态博客的开发。我个人选择了React系的\", _jsx(_components.a, {\n        href: \"https://nextjs.org/\",\n        children: \"Next.js\"\n      }), \"，其他框架如\", _jsx(_components.a, {\n        href: \"https://vue-ssg.jamstacks.net/\",\n        children: \"vue-ssg\"\n      }), \"也都是可以使用的。\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"博客功能\",\n      children: \"博客功能\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"现在我们知道了静态博客大体是如何工作的，也确定了使用的框架。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"项目初始化完毕，面对着hello-world的一张白纸，该考虑如何实现博客的具体功能了。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"文章列表\",\n      children: \"文章列表\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://s2.loli.net/2023/01/17/bMrK3mC8cDXo512.png\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Feature list:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"列表由一个个文章描述的卡片堆叠而成。\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"每个卡片的内容有：标题、文章发布时间、文章描述。\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"列表为按时间倒序排序。\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"点击卡片后，可以跳转到文章的详情页。\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"而我们的原材料只有文件夹内的一堆md文件，显然我们会遍历这个文件夹，并读取各个文件，以获得信息。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"且由于SSG的特性，这个步骤会在开发者本地或服务端（即非浏览器端、客户端）完成，因此需要用到node。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"读取文件信息\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"读取文件，自然要用到node的\", _jsx(_components.code, {\n        children: \"fs\"\n      }), \"，由于\", _jsx(_components.code, {\n        children: \"fs\"\n      }), \"不支持Promise，额外引入\", _jsx(_components.a, {\n        href: \"https://www.npmjs.com/package/fs-extra\",\n        children: \"fs-extra\"\n      }), \"也是不错的。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-javascript\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" fse \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"require\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'fs-extra'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" postFileNames \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"await\"\n        }), \" fse\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"readdir\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'./_posts'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// postFileNames会是一个文件名列表\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"有了文件名列表，就可以组装出每个文件的访问路径（使用\", _jsx(_components.a, {\n        href: \"https://www.geeksforgeeks.org/node-js-process-cwd-method/\",\n        children: \"process.cwd\"\n      }), \"获取当前路径）。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-javascript\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" path \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"require\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'path'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" mdPathList \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" postFileNames\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"map\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"path\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" path\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"join\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"process\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"cwd\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'_posts'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"于是我们就可以遍历访问到每个文件的具体信息。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-javascript\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" matter \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"require\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'gray-matter'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"for\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" path \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"of\"\n        }), \" mdPathList\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" mdData \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"await\"\n        }), \" fse\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"readFile\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"path\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"data\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" mdInfo\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" content \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"matter\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"mdData\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" title\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" date\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" skip \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"false\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" mdInfo\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// ...\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"这里涉及到一个非常实用的工具\", _jsx(_components.code, {\n        children: \"gray-matter\"\n      }), \"，它可以读取出文件的front-matter，即yaml格式的一段文本。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://s2.loli.net/2023/01/17/JNlPTeR6dIfhkqF.png\",\n        alt: \"front-matter\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"于是我们获得了每篇博客的标题与日期。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"获取博客的概要描述\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"当然，概要描述也是可以写在front-matter中，尤其是概要与正文内容相互独立的时候。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"但如果是像我这样的懒人，只想用正文中的一段话当概要，自然这个时候要从正文内容中去读取并截取文本了。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"由于我们读取到的文件是markdown的原始内容，会有\", _jsx(_components.code, {\n        children: \"## ---\"\n      }), \"这样的标记符号，且我们也不希望描述是一个二级标题，而是正文文本，所以就需要用到一些正则匹配，来获取到一段纯文本描述。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"以下方法来自于\", _jsx(_components.a, {\n        href: \"https://stackoverflow.com/a/69656654\",\n        children: \"stackoverflow\"\n      }), \"，可以用于参考。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-javascript\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"getDescription\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"md\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 标题、列表、表格这些都是我们不想用于描述的，需要通过正则过滤掉\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" regex \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"title\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token regex\",\n          children: [_jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          }), _jsx(_components.span, {\n            className: \"token regex-source language-regex\",\n            children: \"^#\\\\s+.+\"\n          }), _jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"heading\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token regex\",\n          children: [_jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          }), _jsx(_components.span, {\n            className: \"token regex-source language-regex\",\n            children: \"^#+\\\\s+.+\"\n          }), _jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"custom\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token regex\",\n          children: [_jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          }), _jsx(_components.span, {\n            className: \"token regex-source language-regex\",\n            children: \"\\\\$\\\\$\\\\s*\\\\w+\"\n          }), _jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"ol\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token regex\",\n          children: [_jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          }), _jsx(_components.span, {\n            className: \"token regex-source language-regex\",\n            children: \"\\\\d+\\\\.\\\\s+.*\"\n          }), _jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"ul\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token regex\",\n          children: [_jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          }), _jsx(_components.span, {\n            className: \"token regex-source language-regex\",\n            children: \"\\\\*\\\\s+.*\"\n          }), _jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"task\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token regex\",\n          children: [_jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          }), _jsx(_components.span, {\n            className: \"token regex-source language-regex\",\n            children: \"\\\\*\\\\s+\\\\[.]\\\\s+.*\"\n          }), _jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"blockQuote\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token regex\",\n          children: [_jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          }), _jsx(_components.span, {\n            className: \"token regex-source language-regex\",\n            children: \">.*\"\n          }), _jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"table\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token regex\",\n          children: [_jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          }), _jsx(_components.span, {\n            className: \"token regex-source language-regex\",\n            children: \"\\\\|.*\"\n          }), _jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"image\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token regex\",\n          children: [_jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          }), _jsx(_components.span, {\n            className: \"token regex-source language-regex\",\n            children: \"!\\\\[.+\\\\]\\\\(.+\\\\).*\"\n          }), _jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"url\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token regex\",\n          children: [_jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          }), _jsx(_components.span, {\n            className: \"token regex-source language-regex\",\n            children: \"\\\\[.+\\\\]\\\\(.+\\\\).*\"\n          }), _jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"codeBlock\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token regex\",\n          children: [_jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          }), _jsx(_components.span, {\n            className: \"token regex-source language-regex\",\n            children: \"`{3}\\\\w+.*\"\n          }), _jsx(_components.span, {\n            className: \"token regex-delimiter\",\n            children: \"/\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-variable function\",\n          children: \"isTitle\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"str\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" regex\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"title\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"test\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"str\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-variable function\",\n          children: \"isHeading\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"str\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" regex\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"heading\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"test\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"str\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-variable function\",\n          children: \"isCustom\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"str\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" regex\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"custom\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"test\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"str\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-variable function\",\n          children: \"isOl\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"str\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" regex\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"ol\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"test\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"str\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-variable function\",\n          children: \"isUl\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"str\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" regex\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"ul\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"test\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"str\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-variable function\",\n          children: \"isTask\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"str\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" regex\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"task\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"test\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"str\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-variable function\",\n          children: \"isBlockQuote\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"str\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" regex\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"blockQuote\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"test\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"str\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-variable function\",\n          children: \"isImage\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"str\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" regex\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"image\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"test\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"str\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-variable function\",\n          children: \"isUrl\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"str\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" regex\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"url\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"test\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"str\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-variable function\",\n          children: \"isCodeBlock\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"str\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" regex\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"codeBlock\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"test\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"str\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n    \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"if\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!\"\n        }), \"md\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" tokens \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" md\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"split\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"\\\\n\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"filter\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"item\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!\"\n        }), \"item\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 去除了空行\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"for\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" i \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" i \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \" tokens\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"length\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" i\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"if\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"isTitle\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"tokens\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"||\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"isHeading\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"tokens\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"||\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"isCustom\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"tokens\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"||\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"isOl\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"tokens\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"||\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"isUl\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"tokens\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"||\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"isTask\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"tokens\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"||\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"isBlockQuote\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"tokens\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"||\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"isImage\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"tokens\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"||\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"isUrl\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"tokens\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"||\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"isCodeBlock\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"tokens\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"i\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"continue\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n      \\t\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 返回第一个非上述匹配的内容\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token template-string\",\n          children: [_jsx(_components.span, {\n            className: \"token template-punctuation string\",\n            children: \"`\"\n          }), _jsxs(_components.span, {\n            className: \"token interpolation\",\n            children: [_jsx(_components.span, {\n              className: \"token interpolation-punctuation punctuation\",\n              children: \"${\"\n            }), \"tokens\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"i\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"slice\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"100\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token interpolation-punctuation punctuation\",\n              children: \"}\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"......\"\n          }), _jsx(_components.span, {\n            className: \"token template-punctuation string\",\n            children: \"`\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"\\\"\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"生成博客id\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"对于每一篇博客，我们最终都需要一个唯一的id，一种方法是直接用标题作id（博客标题显然不应该重复）。不过我们一般需要做一些encode（\", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\",\n        children: \"encodeURIComponent\"\n      }), \"），否则中文在url中很容易出问题。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"只不过这种方式生成的URI一般会超级超级长，所以我个人用一些简单的方法生成了数字id，并最终存储为在一个json文件中。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"最后我生成了一个json文件，用于存储这些描述信息。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://s2.loli.net/2023/01/17/7t9CfVzwLnW4y5l.png\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"预渲染的动态路由\",\n      children: \"预渲染的动态路由\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"既然我们事先就知道博客有哪些，且有了一份json文件映射好了id与文件的关系，因此动态路由自然是可以预渲染的。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"下面是next.js中预渲染的方法：\", _jsx(_components.a, {\n        href: \"https://nextjs.org/docs/basic-features/data-fetching/get-static-props\",\n        children: \"getStaticProps\"\n      }), \"。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-javascript\",\n        children: [_jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// postMap是上文中生成的json文件\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"async\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"getStaticPaths\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// path即预渲染的路由\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"paths\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token known-class-name class-name\",\n          children: \"Object\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"keys\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"postMap\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"map\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"id\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"params\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" id \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"fallback\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"false\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"async\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"getStaticProps\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"context\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 此处的id就是上面的id\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" id \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" context\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"params\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" title\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" date \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" postMap\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"id\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" mdData \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"await\"\n        }), \" fse\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"readFile\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsxs(_components.span, {\n          className: \"token template-string\",\n          children: [_jsx(_components.span, {\n            className: \"token template-punctuation string\",\n            children: \"`\"\n          }), _jsxs(_components.span, {\n            className: \"token interpolation\",\n            children: [_jsx(_components.span, {\n              className: \"token interpolation-punctuation punctuation\",\n              children: \"${\"\n            }), \"postsDirPath\", _jsx(_components.span, {\n              className: \"token interpolation-punctuation punctuation\",\n              children: \"}\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"/\"\n          }), _jsxs(_components.span, {\n            className: \"token interpolation\",\n            children: [_jsx(_components.span, {\n              className: \"token interpolation-punctuation punctuation\",\n              children: \"${\"\n            }), \"name\", _jsx(_components.span, {\n              className: \"token interpolation-punctuation punctuation\",\n              children: \"}\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token template-punctuation string\",\n            children: \"`\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"content\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" mdText \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"matter\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"mdData\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"props\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n            id\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n            title\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n            date\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n            mdText\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"文章详情\",\n      children: \"文章详情\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"文章详情中的关键点是，如何将markdown渲染为用户友好的Html，你可能会需要做以下几件事：\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Markdown to Html\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"这里可以用\", _jsx(_components.a, {\n        href: \"https://github.com/remarkjs/react-markdown\",\n        children: \"React-Markdown\"\n      }), \"来实现，显然它React友好。具体的用法就不赘述了。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"不过需要注意的是，React-Markdown需要在客户端运行，因此我们不能直接将其写在render中，而是要异步渲染（可以使用useEffect）。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"高亮code\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"同样我们有一个可以配套使用的package：\", _jsx(_components.a, {\n        href: \"https://github.com/react-syntax-highlighter/react-syntax-highlighter\",\n        children: \"react-syntax-highlighter\"\n      }), \"。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"配合ReactMarkdown的\", _jsx(_components.code, {\n        children: \"components\"\n      }), \"属性，可以对code进行定制。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"支持锚点\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"如果我们想要使用目录导航，标题的锚点就非常重要了。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"同样在ReactMarkdown的\", _jsx(_components.code, {\n        children: \"components\"\n      }), \"属性，可以对\", _jsx(_components.code, {\n        children: \"h2\"\n      }), \"，\", _jsx(_components.code, {\n        children: \"h3\"\n      }), \"等进行定制，在这里添加生成锚点的逻辑。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"支持html in markdown\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"如果你要在markdown中插入codepen、sandbox之类的代码示例，一般都需要采用html in markdown的方式，默认情况下ReactMarkdown会将所有html标签都无害化处理，想要让这些html生效，可以使用\", _jsx(_components.a, {\n        href: \"https://github.com/rehypejs/rehype-raw\",\n        children: \"rehype-raw\"\n      }), \"。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"完整代码\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"请见\", _jsx(_components.a, {\n        href: \"https://github.com/B-sirius/b-sirius.github.io/blob/0.1.0/pages/posts/%5Bid%5D.js\",\n        children: \"github\"\n      }), \"。\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"rss支持\",\n      children: \"RSS支持\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"RSS的本质其实很简单，它是一份按照规则定制的静态xml文件，内容是需要阅读的内容的基础信息。我们之前已经处理过文章列表，其中包含的信息恰恰就是博客的RSS应该包含的：标题、日期、简介、跳转地址。而RSS订阅源会通过这个xml的文件地址来进行拉取。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"当然，有\", _jsx(_components.a, {\n        href: \"https://www.npmjs.com/package/rss\",\n        children: \"RSS\"\n      }), \"这个包可以帮助我们生成这个xml文件，并不复杂，可以直接参考\", _jsx(_components.a, {\n        href: \"https://github.com/B-sirius/b-sirius.github.io/blob/0.1.0/server/generateRSSFeed.js\",\n        children: \"代码\"\n      }), \"。\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"博客体验\",\n      children: \"博客体验\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"在上面提到的\", _jsx(_components.a, {\n        href: \"https://juejin.cn/post/7039151040188383268\",\n        children: \"CSR，SSR和SSG是什么\"\n      }), \"，其中提到了SSG的性能是很好的。但真正影响博客体验的要素是很多的，我觉得可以从以下几方面来考虑：\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"理论性能、体验，可以用Chrome的Lighthouse来测试，适合作为参考。\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"bundle是否合理，可以使用\", _jsx(_components.code, {\n          children: \"@next/bundle-analyzer\"\n        }), \"之类的库来帮助分析。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"设备适配性：大致从移动端、平板、电脑这几种设备类型来考虑。\", \"\\n\", _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"视觉是否合理；\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"交互是否合理；\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"请求资源是否合理（如请求的图片尺寸）；\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"网络环境，可以用\", _jsx(_components.a, {\n          href: \"https://tool.chinaz.com/sitespeed\",\n          children: \"站长工具的网站测速工具\"\n        }), \"，检查对大陆用户是否友好。\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"社交平台分享友好，是否有favicon.ico，是否有相应的metadata配置。\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"SEO优化，同样可以用站长工具帮助检查。\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"以上基本就是我在搭建自己的静态博客时，所考虑到的东西。许多提到的可优化项或许还没有实施，但还是欢迎来访问我的博客\", _jsx(_components.a, {\n        href: \"https://b-sirius.github.io/posts\",\n        children: \"LWDW!\"\n      }), \"，同时也可以查看\", _jsx(_components.a, {\n        href: \"https://github.com/B-sirius/b-sirius.github.io/tree/0.1.0\",\n        children: \"我的github仓库\"\n      }), \"，作为实现的参考。\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"参考链接\",\n      children: \"参考链接\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://juejin.cn/post/7039151040188383268\",\n          children: \"CSR，SSR和SSG是什么\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://nextjs.org/\",\n          children: \"Next.js\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://vue-ssg.jamstacks.net/\",\n          children: \"vue-ssg\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://www.npmjs.com/package/fs-extra\",\n          children: \"fs-extra\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://www.geeksforgeeks.org/node-js-process-cwd-method/\",\n          children: \"process.cwd\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://stackoverflow.com/a/69656654\",\n          children: \"Extract first p and h1 tag content from markdown\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\",\n          children: \"encodeURIComponent\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://nextjs.org/docs/basic-features/data-fetching/get-static-props\",\n          children: \"getStaticProps\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/remarkjs/react-markdown\",\n          children: \"React-Markdown\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/react-syntax-highlighter/react-syntax-highlighter\",\n          children: \"react-syntax-highlighter\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/rehypejs/rehype-raw\",\n          children: \"rehype-raw\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://b-sirius.github.io/posts\",\n          children: \"LWDW!\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/B-sirius/b-sirius.github.io/tree/0.1.0\",\n          children: \"b-sirius.github.io\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"description":"hexo一直是静态博客的首选之一，它开箱即用的特点以及相对丰富的主题选择让使用者可以聚焦于博客内容的编写，同时拥有一个相对美观的界面。但如果你是一个对博客内容有高度自定义需求的开发者，且并没有分享博客......","usedCustomComponentNames":[]},"__N_SSG":true}