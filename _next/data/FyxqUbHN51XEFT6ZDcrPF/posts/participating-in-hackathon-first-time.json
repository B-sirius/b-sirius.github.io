{"pageProps":{"id":"participating-in-hackathon-first-time","title":"当一只菜鸡参加Hackathon","date":"2017-04-24","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"这周末参加了学校的hackathon，虽然在时长上不到24h，但没有意料到的是，此次体验后，俺会对产品开发和技术协作有了一些全新认识。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"产品开发\",\n      children: \"产品开发\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在思考如何做一款原创性，解决痛点型的产品时，首先需要考虑的是什么？当然是它解决痛点的方式——对于大多数产品，这个方式可能真的仅仅是一个非常具体的点。相对的，登录注册的基本功能，精致的界面UI设计等，在hackathon的开发，或者说产品的第一版中，绝非是第一要素，因为这都体现不出所谓的核心竞争力......这次hackathon中俺小组的失败，一半可以说是——花了两分钟用脚趾头想了一个与同类产品想比毫无竞争力的产品，然后花了19小时58分钟绞尽脑汁地从最基础的系统开始从0搭建，结果直到时间结束还没有进入产品核心开发，可以说是本末倒置的教科书体现。将最宝贵的精力放在思考产品核心上，再全力去实现这个核心的开发，测验可行性，如果可行，再去完善其他的部分......俺也讲不出什么复杂的逻辑，大概就是这样吧。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"技术协作\",\n      children: \"技术协作\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"这次是开发人员是 前端 * 2 + 后端 的灾难性配合。现在想想，前端在进行合作时，如果没有设计稿，可以规定参考某一UI库的风格，或者干脆使用UI库，统一命名规范。更要与后端商量好前后端对接形式，需要的接口等......双方若是一厢情愿地各顾自的开发，结果就会想俺们一样惨吧。\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"咦，好像感想就这样结束了？算是水了一篇【摊】\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"description":"这周末参加了学校的hackathon，虽然在时长上不到24h，但没有意料到的是，此次体验后，俺会对产品开发和技术协作有了一些全新认识。......","usedCustomComponentNames":[]},"__N_SSG":true}