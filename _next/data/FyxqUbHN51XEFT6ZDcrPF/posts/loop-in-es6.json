{"pageProps":{"id":"loop-in-es6","title":"循环，还有这种操作！？——es6补充","date":"2017-10-22","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    hr: \"hr\",\n    h2: \"h2\",\n    h3: \"h3\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"缘，妙不可言——开始系统梳理es6后，发现关于循环的知识点又有了不少补充，正好填一下上次的坑嘛【抖】，本文有大量部分直接摘于\", _jsx(_components.a, {\n        href: \"http://es6.ruanyifeng.com/\",\n        children: \"es6标准入门\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ps: \", _jsx(_components.a, {\n        href: \"http://b-sirius.me/2017/08/15/%E5%BE%AA%E7%8E%AF%EF%BC%8C%E8%BF%98%E6%9C%89%E8%BF%99%E7%A7%8D%E6%93%8D%E4%BD%9C/\",\n        children: \"上集回顾\"\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"object对象的拓展\",\n      children: \"Object对象的拓展\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"objectkeys\",\n      children: \"Object.keys()\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"其实是es5引入的方法，返回一个数组，常用于与for-of搭配遍历，成员是**参数对象自身（不含继承）\", _jsx(_components.strong, {\n        children: \"的所有\"\n      }), \"可枚举（enumerable）**属性的键名：\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-javascript\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" obj \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"foo\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'bar'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"baz\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"42\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token known-class-name class-name\",\n          children: \"Object\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"keys\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"obj\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// [\\\"foo\\\", \\\"baz\\\"]\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"相比之下，我们更熟悉的for-in遍历虽然同样是遍历\", _jsx(_components.strong, {\n        children: \"可枚举属性\"\n      }), \"的键名，但是它遍历的范围不只是对象自身，还有它的\", _jsx(_components.strong, {\n        children: \"原型链\"\n      }), \"，相比之下object.keys()在大多情况下更加适用。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"另外，es2017中有一个提案，引入\", _jsx(_components.strong, {\n        children: \"Object.values\"\n      }), \"和\", _jsx(_components.strong, {\n        children: \"Object.entires\"\n      }), \"与其配套使用：\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-Javascript\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"keys\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" values\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" entries\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token known-class-name class-name\",\n          children: \"Object\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" obj \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"a\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"b\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"c\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"3\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"for\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" key \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"of\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"keys\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"obj\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token console class-name\",\n          children: \"console\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"log\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"key\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 'a', 'b', 'c'\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"for\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" value \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"of\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"values\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"obj\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token console class-name\",\n          children: \"console\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"log\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"value\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// 1, 2, 3\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"for\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"key\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" value\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"of\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"entries\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"obj\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token console class-name\",\n          children: \"console\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"log\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"key\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" value\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// ['a', 1], ['b', 2], ['c', 3]\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"iterator遍历器\",\n      children: \"Iterator遍历器\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"其实这才是重头戏啊，由于涉及到的点太多，只提及一点概念以及相关关键词。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"概念\",\n      children: \"概念\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Iterator 的作用有三个：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"各种数据结构，提供一个统一的、简便的访问接口\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"使得数据结构的成员能够按某种次序排\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"ES6创造了一种新的遍历命令\", _jsx(_components.code, {\n          children: \"for...of\"\n        }), \"循环，Iterator接口主要供\", _jsx(_components.code, {\n          children: \"for...of\"\n        }), \"消费\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Iterator的遍历过程如下：\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"创建一个指针对象，指向当前数据结构的起始位置。也就是说，\", _jsx(_components.strong, {\n          children: \"遍历器对象本质上，就是一个指针对象\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"第一次调用指针对象的\", _jsx(_components.code, {\n          children: \"next\"\n        }), \"方法，可以将指针指向数据结构的第一个成员\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"第二次调用指针对象的\", _jsx(_components.code, {\n          children: \"next\"\n        }), \"方法，指针就指向数据结构的第二个成员\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"不断调用指针对象的\", _jsx(_components.code, {\n          children: \"next\"\n        }), \"方法，直到它指向数据结构的结束位置\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"每一次调用\", _jsx(_components.code, {\n        children: \"next\"\n      }), \"方法，都会返回数据结构的当前成员的信息。具体来说，就是\", _jsxs(_components.strong, {\n        children: [\"返回一个包含\", _jsx(_components.code, {\n          children: \"value\"\n        }), \"和\", _jsx(_components.code, {\n          children: \"done\"\n        }), \"两个属性的对象\"]\n      }), \"。其中，\", _jsx(_components.code, {\n        children: \"value\"\n      }), \"属性是当前成员的值，\", _jsx(_components.code, {\n        children: \"done\"\n      }), \"属性是一个布尔值，表示遍历是否结束。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"模拟 next 方法返回值：\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-Javascript\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"var\"\n        }), \" it \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"makeIterator\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'a'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'b'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\nit\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"next\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// { value: \\\"a\\\", done: false }\"\n        }), \"\\nit\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"next\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// { value: \\\"b\\\", done: false }\"\n        }), \"\\nit\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"next\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// { value: undefined, done: true }\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"makeIterator\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"array\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"var\"\n        }), \" nextIndex \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token function-variable function\",\n          children: \"next\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" nextIndex \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"<\"\n        }), \" array\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"length\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"?\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"value\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" array\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"nextIndex\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"done\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"false\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"value\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword nil\",\n          children: \"undefined\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token literal-property property\",\n          children: \"done\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"true\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"默认iterator接口\",\n      children: \"默认Iterator接口\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ES6 规定，默认的 Iterator 接口部署在数据结构的\", _jsx(_components.code, {\n        children: \"Symbol.iterator\"\n      }), \"属性，或者说，\", _jsxs(_components.strong, {\n        children: [\"一个数据结构只要具有\", _jsx(_components.code, {\n          children: \"Symbol.iterator\"\n        }), \"属性，就可以认为是“可遍历的”（iterable）\"]\n      }), \"。\", _jsx(_components.code, {\n        children: \"Symbol.iterator\"\n      }), \"属性本身是一个函数，就是当前数据结构默认的遍历器生成函数。执行这个函数，就会返回一个遍历。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"而原生具有该借口的数据结构如下：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Array\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Map\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Set\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"String\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"TypedArray\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"函数的 arguments 对象\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"NodeList 对象\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以数组为例：\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-Javascript\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" arr \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'a'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'b'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'c'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"let\"\n        }), \" iter \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" arr\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token known-class-name class-name\",\n          children: \"Symbol\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"iterator\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\niter\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"next\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// { value: 'a', done: false }\"\n        }), \"\\niter\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"next\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// { value: 'b', done: false }\"\n        }), \"\\niter\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"next\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// { value: 'c', done: false }\"\n        }), \"\\niter\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"next\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// { value: undefined, done: true }\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"一个对象如果要具备可被\", _jsx(_components.code, {\n        children: \"for...of\"\n      }), \"循环调用的 Iterator 接口，就必须在\", _jsx(_components.code, {\n        children: \"Symbol.iterator\"\n      }), \"的属性上部署遍历器生成方法（原型链上的对象具有该方法也可），这个操作骚方法就太多了，还是详看es6吧，其中最值得注意的骚操作就是\", _jsx(_components.strong, {\n        children: \"Generator函数\"\n      }), \"。\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"调用iterator接口的场合\",\n      children: \"调用Iterator接口的场合\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"for-of循环\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"解构赋值\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"扩展运算符\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"yield*\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"没了？没了。Iterator涉及到的点和用法在es6入门中整理的很好了，继续复制粘贴感觉也没有太大意义嗯——\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"description":"---......","usedCustomComponentNames":[]},"__N_SSG":true}