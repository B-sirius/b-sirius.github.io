{"pageProps":{"id":"js-animation-color","title":"当我们讨论动画时，我们在讨论什么———color篇","date":"2017-04-30","htmlText":"<html><head></head><body><h2 id=\"设计模式的运用\">设计模式的运用</h2>\n<p>除了上篇的transform动画需要特殊处理，还有一个大头就是属性值为颜色的处理。不同于transform，属性值为颜色的属性可以有很多种，而颜色属性值又有rgb、hsl、rgba甚至十六进制等多种表示方式，意味着两者对属性名、属性值分离的逻辑也是不同的，再加上对普通属性处理的逻辑，至少有三种不同的分离逻辑。因此在加入颜色的处理方法之前，我先用策略模式重构了这部分逻辑，最后结果如下：</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token doc-comment comment\">/**\n * 对porps属性值处理，获得渲染时所需的数据\n */</span>\n<span class=\"token class-name\">Rush</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">prototype</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_handleProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// transform 的属性需要特别处理</span>\n    <span class=\"token keyword\">const</span> transformProperties <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"translateX\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"translateY\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"translateZ\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"scale\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"scaleX\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"scaleY\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"scaleZ\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"skewX\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"skewY\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rotateX\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rotateY\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rotateZ\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// color 的属性需要特别处理</span>\n    <span class=\"token keyword\">const</span> colorProperties <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"color\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"background-color\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"border-color\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"outline-color\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> propertyHandler <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 普通属性的处理方法</span>\n    propertyHandler<span class=\"token punctuation\">[</span><span class=\"token string\">'default'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">task<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> el <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">el</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">var</span> begin<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 初始属性值和单位</span>\n        <span class=\"token keyword\">var</span> end <span class=\"token operator\">=</span> <span class=\"token function\">propertyValueHandler</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> task<span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 末属性数值和单位</span>\n\n        <span class=\"token keyword\">var</span> realPropertyName <span class=\"token operator\">=</span> key<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 真正的属性名</span>\n        <span class=\"token keyword\">var</span> styleLogic <span class=\"token operator\">=</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">var</span> beginValue <span class=\"token operator\">=</span> <span class=\"token function\">getComputedStyle</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">,</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getPropertyValue</span><span class=\"token punctuation\">(</span>realPropertyName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获得初始属性值(带单位)</span>\n\n        begin <span class=\"token operator\">=</span> <span class=\"token function\">propertyValueHandler</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> beginValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获得属性数值和单位</span>\n\n        realPropertyName <span class=\"token operator\">=</span> <span class=\"token function\">transferStyleName</span><span class=\"token punctuation\">(</span>realPropertyName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 将连字符格式转换为驼峰式</span>\n\n        <span class=\"token comment\">// 为task新增属性</span>\n        task<span class=\"token punctuation\">.</span><span class=\"token property-access\">newProps</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            begin<span class=\"token punctuation\">,</span>\n            end<span class=\"token punctuation\">,</span>\n            realPropertyName<span class=\"token punctuation\">,</span>\n            styleLogic\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// transform属性的处理方法</span>\n    <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> propertyName <span class=\"token keyword\">of</span> transformProperties<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        propertyHandler<span class=\"token punctuation\">[</span>propertyName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">task<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> el <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">el</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> begin<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 初始属性值和单位</span>\n            <span class=\"token keyword\">var</span> end <span class=\"token operator\">=</span> <span class=\"token function\">propertyValueHandler</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> task<span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 末属性数值和单位</span>\n\n            <span class=\"token keyword\">var</span> realPropertyName <span class=\"token operator\">=</span> <span class=\"token string\">'transform'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> styleLogic <span class=\"token operator\">=</span> <span class=\"token string\">'transform'</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> beginValue<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 初始属性值（带单位）</span>\n\n            <span class=\"token comment\">// 如果已经缓存了transform属性</span>\n            <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">.</span><span class=\"token property-access\">transformCache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">.</span><span class=\"token property-access\">transformCache</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    beginValue <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span><span class=\"token property-access\">transformCache</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n                    beginValue <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                    el<span class=\"token punctuation\">.</span><span class=\"token property-access\">transformCache</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> beginValue<span class=\"token punctuation\">,</span>\n                        <span class=\"token literal-property property\">unitType</span><span class=\"token operator\">:</span> end<span class=\"token punctuation\">.</span><span class=\"token property-access\">unitType</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// 只有在元素没有在style中定义任何transform属性时才会调用</span>\n                beginValue <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">// 给这个元素添加transfromCache属性，用于保存transfrom的各个属性</span>\n                <span class=\"token comment\">// 因为如果style中的transform被设置了多个值，读取到的将是\"rotate(30deg) translateX(10px)\"这样的值，将无法处理</span>\n                el<span class=\"token punctuation\">.</span><span class=\"token property-access\">transformCache</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n                el<span class=\"token punctuation\">.</span><span class=\"token property-access\">transformCache</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> beginValue<span class=\"token punctuation\">,</span>\n                    <span class=\"token literal-property property\">unitType</span><span class=\"token operator\">:</span> end<span class=\"token punctuation\">.</span><span class=\"token property-access\">unitType</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            begin <span class=\"token operator\">=</span> <span class=\"token function\">propertyValueHandler</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> beginValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获得属性数值和单位</span>\n\n            <span class=\"token comment\">// 为task新增属性</span>\n            task<span class=\"token punctuation\">.</span><span class=\"token property-access\">newProps</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                begin<span class=\"token punctuation\">,</span>\n                end<span class=\"token punctuation\">,</span>\n                realPropertyName<span class=\"token punctuation\">,</span>\n                styleLogic\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// color属性的处理方法，统一转换为rgba来处理</span>\n    <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> propertyName <span class=\"token keyword\">of</span> colorProperties<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        propertyHandler<span class=\"token punctuation\">[</span>propertyName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">task<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> el <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">el</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> begin<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> end <span class=\"token operator\">=</span> <span class=\"token function\">normalize2rgba</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> realPropertyName <span class=\"token operator\">=</span> key<span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> beginValue <span class=\"token operator\">=</span> <span class=\"token function\">getComputedStyle</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">,</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getPropertyValue</span><span class=\"token punctuation\">(</span>realPropertyName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// e.g. rgba(255, 255, 255, 1);</span>\n            begin <span class=\"token operator\">=</span> <span class=\"token function\">normalize2rgba</span><span class=\"token punctuation\">(</span>beginValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回的是转换后的rgba对象</span>\n\n            <span class=\"token keyword\">var</span> styleLogic <span class=\"token operator\">=</span> <span class=\"token string\">'rgba'</span><span class=\"token punctuation\">;</span>\n\n            realPropertyName <span class=\"token operator\">=</span> <span class=\"token function\">transferStyleName</span><span class=\"token punctuation\">(</span>realPropertyName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 将连字符格式转换为驼峰式</span>\n\n\n            task<span class=\"token punctuation\">.</span><span class=\"token property-access\">newProps</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                begin<span class=\"token punctuation\">,</span>\n                end<span class=\"token punctuation\">,</span>\n                realPropertyName<span class=\"token punctuation\">,</span>\n                styleLogic\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">task</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> el <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">el</span><span class=\"token punctuation\">;</span>\n\n        task<span class=\"token punctuation\">.</span><span class=\"token property-access\">newProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 保存渲染动画时所需的数据</span>\n\n        <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> key <span class=\"token keyword\">in</span> task<span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>propertyHandler<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 特殊属性</span>\n                propertyHandler<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> task<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 普通属性</span>\n                propertyHandler<span class=\"token punctuation\">[</span><span class=\"token string\">'default'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> task<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"color的痛点\">color的痛点</h2>\n<ul>\n<li>\n<p>color的多种属性值</p>\n<p>属性值可能是rgb色，hsl色，rgba色甚至16进制色，为他们各做一种处理逻辑显然太过复杂且没有必要，将其全部转换成同一单位再进行处理更加明智。考虑到透明度，我觉得全部转换为rgba最为合适。颜色转换的逻辑到处都能找到就不细说了。</p>\n</li>\n<li>\n<p>rgba属性值的分离</p>\n<p>不同于之前所有的属性值，rgba值有4个数值，考虑到我们的缓动函数每次只处理一个数值，需要用数组保存再进行分别处理</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> key <span class=\"token keyword\">in</span> task<span class=\"token punctuation\">.</span><span class=\"token property-access\">newProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> task<span class=\"token punctuation\">.</span><span class=\"token property-access\">newProps</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">begin</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">num</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> beginArr <span class=\"token operator\">=</span> task<span class=\"token punctuation\">.</span><span class=\"token property-access\">newProps</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">begin</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">num</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">var</span> endArr <span class=\"token operator\">=</span> task<span class=\"token punctuation\">.</span><span class=\"token property-access\">newProps</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">end</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">num</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">var</span> newArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> beginArr<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> beginValue <span class=\"token operator\">=</span> beginArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                        changeValue <span class=\"token operator\">=</span> endArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> beginValue<span class=\"token punctuation\">,</span>\n                        newValue <span class=\"token operator\">=</span> <span class=\"token function\">easing</span><span class=\"token punctuation\">(</span>currTime<span class=\"token punctuation\">,</span> beginValue<span class=\"token punctuation\">,</span> changeValue<span class=\"token punctuation\">,</span> duration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 根据缓动函数计算新的位置</span>\n                        newArr<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                self<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">styleHandler</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> newArr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> beginValue <span class=\"token operator\">=</span> task<span class=\"token punctuation\">.</span><span class=\"token property-access\">newProps</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">begin</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">num</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 初始位置</span>\n                    changeValue <span class=\"token operator\">=</span> task<span class=\"token punctuation\">.</span><span class=\"token property-access\">newProps</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">end</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">num</span> <span class=\"token operator\">-</span> beginValue<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 位置改变量</span>\n\n                <span class=\"token keyword\">var</span> newValue <span class=\"token operator\">=</span> <span class=\"token function\">easing</span><span class=\"token punctuation\">(</span>currTime<span class=\"token punctuation\">,</span> beginValue<span class=\"token punctuation\">,</span> changeValue<span class=\"token punctuation\">,</span> duration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 根据缓动函数计算新的位置</span>\n\n                <span class=\"token comment\">// 更新style</span>\n                self<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">styleHandler</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n</li>\n<li>\n<p>将处理后得到的新属性重新拼接为style样式</p>\n<p>同样是采取策略模式，为不同的拼接逻辑定义了对应的拼接方法</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">Rush</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">prototype</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">styleHandler</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'transform'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">task<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> newValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">el</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">transformCache</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span> <span class=\"token operator\">=</span> newValue<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 更新缓存值</span>\n\n            <span class=\"token keyword\">var</span> propertyValue <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n                propertyName <span class=\"token operator\">=</span> task<span class=\"token punctuation\">.</span><span class=\"token property-access\">newProps</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">realPropertyName</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// e.g transform: rotateZ(100deg) translateX(50px)</span>\n            <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> key <span class=\"token keyword\">in</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">el</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">transformCache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> key<span class=\"token punctuation\">,</span> <span class=\"token comment\">// e.g rotateZ</span>\n                    val <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">el</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">transformCache</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// e.g 100</span>\n                    unitType <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">el</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">transformCache</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">unitType</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// e.g deg</span>\n\n                propertyValue <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>val<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>unitType<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// e.g rotate(100deg)</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">el</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">[</span>propertyName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> propertyValue<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token string-property property\">'rgba'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">task<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> newArr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> <span class=\"token string\">'rgba('</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> newArr<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                text <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>newArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">', '</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            text <span class=\"token operator\">+=</span> newArr<span class=\"token punctuation\">[</span>newArr<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">el</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">[</span>task<span class=\"token punctuation\">.</span><span class=\"token property-access\">newProps</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">realPropertyName</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token string-property property\">'default'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">task<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> newValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">el</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">[</span>task<span class=\"token punctuation\">.</span><span class=\"token property-access\">newProps</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">realPropertyName</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>newValue<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>task<span class=\"token punctuation\">.</span><span class=\"token property-access\">newProps</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">end</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">unitType</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">task<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> newValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> styleLogic <span class=\"token operator\">=</span> task<span class=\"token punctuation\">.</span><span class=\"token property-access\">newProps</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">styleLogic</span><span class=\"token punctuation\">;</span>\n\n        t<span class=\"token punctuation\">[</span>styleLogic<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> task<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n</li>\n</ul>\n<hr>\n<p>至此，通用js动画库的两大难点基本得到解决，虽说是针对transform和color的处理方法，但在编码过程中，如何运用设计模式优化代码结构可能花费了更多的时间。</p>\n</body></html>","description":"除了上篇的transform动画需要特殊处理，还有一个大头就是属性值为颜色的处理。不同于transform，属性值为颜色的属性可以有很多种，而颜色属性值又有rgb、hsl、rgba甚至十六进制等多种表......"},"__N_SSG":true}